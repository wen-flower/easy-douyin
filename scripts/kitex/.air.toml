# Config file for [Air](https://github.com/cosmtrek/air) in TOML format

# 工作目录
# . 或 绝对路径，请注意以下目录必须在 root 目录下
root = "."
tmp_dir = "_output/air_tmp"

[build]
# 构建执行的命令
cmd = "make build"
# 二进制文件位置，一般是 cmd 执行的产物
bin = "./_output/#SERVICE_NAME#"
# 自定义二进制文件位置，可以在运行应用程序时设置环境变量
#full_bin = "APP_ENV=dev APP_USER=air ./tmp/main"
# 监听这些文件扩展名
include_ext = ["go"]
# Ignore these filename extensions or directories.
exclude_dir = ["_output"]
# 要监听的目录列表
#include_dir = ["dal", "handler", "model"]
# 要监听的文件
#include_file = ["main.go"]
# 排除文件列表
#exclude_file = []
# 排除文件的正则表达式列表
#exclude_regex = ["_test\\.go"]
# Exclude unchanged files.
exclude_unchanged = true
# Follow symlink for directories
follow_symlink = true
# 此日志文件名称位于 $(tmp_dir) 中
log = "air.log"
# It's not necessary to trigger build each time file changes if it's too frequent.
delay = 2000 # ms
# 发生构建错误时停止运行旧二进制文件
stop_on_error = true
# 杀死进程前发送中断信号（windows不支持此功能）
send_interrupt = false
# 发送中断信号后的延时
kill_delay = 500 # ms
# Rerun binary or not
rerun = false
# Delay after each executions
rerun_delay = 500
# 在运行二进制时添加额外的参数 (bin/full_bin)。 将运行 `$(bin/full_bin) hello world`。
args_bin = ["--debug", "--port=38000", "--log-pretty"]

[log]
# 显示日志时间
time = true
# 只显示主日志，隐藏 watcher、 build、 runner）
main_only = false

[color]
# 自定义每个部分的颜色。 如果未找到颜色，使用原始应用程序日志。
main = "magenta"
watcher = "cyan"
build = "yellow"
runner = "green"

[misc]
# 退出时删除 tmp 目录
clean_on_exit = false